from flask import Flask, request, render_template

import os
from werkzeug.middleware.dispatcher import DispatcherMiddleware
from werkzeug.serving import WSGIRequestHandler

# SCRIPT_NAME 환경변수 처리를 위한 미들웨어
class ScriptNameMiddleware:
    def __init__(self, app):
        self.app = app
    
    def __call__(self, environ, start_response):
        script_name = os.environ.get('SCRIPT_NAME', '')
        if script_name:
            environ['SCRIPT_NAME'] = script_name
            path_info = environ.get('PATH_INFO', '')
            if path_info.startswith(script_name):
                environ['PATH_INFO'] = path_info[len(script_name):]
        return self.app(environ, start_response)

import re

app = Flask(__name__)

# WSGI 미들웨어 적용
app.wsgi_app = ScriptNameMiddleware(app.wsgi_app)

pattern = r"^YBG\{[A-Z]_[0-9]{4}_[a-f0-9]{6}\}$"

def get_flag():
    try:
        with open("flag.txt", "r") as f:
            return f.read().strip()
    except:
        return "FLAG_NOT_FOUND"

@app.route("/", methods=["GET", "POST"])
def index():
    result = None
    if request.method == "POST":
        user_input = request.form.get("flag", "")
        if re.fullmatch(pattern, user_input):
            if user_input == get_flag():
                result = "🎉 정답입니다! 플래그가 정확합니다."
            else:
                result = "❌ 형식은 맞지만 내용이 틀렸습니다."
        else:
            result = "🚫 플래그 형식이 올바르지 않습니다."
    return render_template("index.html", result=result)

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5000, debug=False)
